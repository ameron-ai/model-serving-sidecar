spring:
  application:
    name: ${APP_NAME:ameron-sidecar}
  cloud:
    stream:
      function:
        definition: predictionRequestProcessor;predictionEventProcessor
      bindings:
        predictionEventProcessor-out-0:
          destination: ${APP_REPORTER_KAFKA_PREDICTION_EVENT_OUT_TOPIC:prediction-event}
        predictionRequestProcessor-in-0:
          destination: ${APP_PROVIDER_KAFKA_IN_TOPIC:prediction-request}
          group: ${APP_PROVIDER_KAFKA_IN_GROUP:prediction-processor}
        predictionRequestProcessor-out-0:
          destination: ${APP_PROVIDER_KAFKA_OUT_TOPIC:prediction-response}
        binder:
          brokers: ${APP_PROVIDER_KAFKA_BROKERS:PLAINTEXT://localhost}

logging:
  level:
    org:
      springframework: ${SPRING_LOGGING_LEVEL:INFO}
    ai:
      ameron: ${APP_LOGGING_LEVEL:INFO}
      ameron.sidecar.integration.event.logger: ${APP_EVENT_LOGGER_LOGGING_LEVEL:DEBUG}
      ameron.model.log: ${APP_MODEL_LOGGER_LOGGING_LEVEL:DEBUG}

app:
  model-service:
    adapter.backend: ${APP_MODEL_BACKEND:logger}
    adapter.backend.http.url: ${APP_MODEL_HTTP_URL}
  prediction-event:
    consumer: ${APP_PREDICTION_EVENT_CONSUMER:stream}
    consumer.binding.name: ${APP_STREAM_PREDICTION_EVENT_CONSUMER_BINDING_NAME:predictionEventProcessor-out-0}
